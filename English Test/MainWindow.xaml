<Window x:Class="English_Test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525" WindowStyle="None" BorderThickness="0"
        Background="AliceBlue" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="16" MinHeight="16" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel  Background="#141414" FrameworkElement.FlowDirection="LeftToRight">
        <WrapPanel>
            <Button Background="#ff1e1e" FontSize="14" x:Name="btn1" Click="btn1_Click" Width="35" Height="35" Content="X"/>
            <Button Background="DimGray" FontSize="14" x:Name="btn2" Click="btn2_Click" Width="35" Height="35" Content="-">
                <Button.Resources>

                </Button.Resources>
            </Button>
        </WrapPanel>
        <Label Foreground="Red" HorizontalAlignment="Center" Content="English Test" FontFamily="Monotype Corsiva" FontSize="30"></Label>
        <StackPanel Height="200">
            <WrapPanel HorizontalAlignment="Left">
                <Label Margin="60,0,0,0" Foreground="Red" HorizontalAlignment="Left" Name="numLabel" FontSize="20" FontFamily="Times New Roman" Content="Number"></Label>
                <Label Foreground="Red" Tag="0" Height="60"  HorizontalAlignment="Center" Name="questionLabel" FontSize="20" FontFamily="Times New Roman"  Content="What will happen if it exceeds its size" TextOptions.TextHintingMode="Animated" ScrollViewer.HorizontalScrollBarVisibility="Visible"/>
            </WrapPanel>
            <StackPanel Name="st" Margin="100,0,0,0">
                <WrapPanel Name="rBtn_1">
                    <RadioButton Margin="0,0,0,0" Checked="rBtn1_Checked"  Foreground="Red" TabIndex="0" Name="rBtn1" FontSize="18" GroupName="name"  Content="Answer1"></RadioButton>
                </WrapPanel>
                <WrapPanel Name="rBtn_2">
                    <RadioButton Margin="0,5,0,0" Checked="rBtn1_Checked" Foreground="Red" TabIndex="1" Name="rBtn2" FontSize="18" GroupName="name" Content="Answer2"></RadioButton>
                </WrapPanel >
                <WrapPanel Name="rBtn_3">
                    <RadioButton Margin="0,5,0,0" Checked="rBtn1_Checked" Foreground="Red" TabIndex="2" Name="rBtn3" FontSize="18" Content="Answer3" GroupName="name"></RadioButton>
                </WrapPanel>
                <WrapPanel Name="rBtn_4">
                    <RadioButton Margin="0,5,0,0" Checked="rBtn1_Checked" Foreground="Red" TabIndex="3" Name="rBtn4" FontSize="18" Content="Answer4" GroupName="name"></RadioButton>
                </WrapPanel>
            </StackPanel>
        </StackPanel>
        <WrapPanel  VerticalAlignment="Bottom" HorizontalAlignment="Center">

            <Button x:Name="prvBtn" Click="prvBtn_Click" Margin="0,0,150,0" FontSize="16" Content="Previous" Height="40" Width="75" Background="#100e0e" Foreground="Red" BorderBrush="Red">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" To="45" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" To="80" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" To="40" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" To="75" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="nxtBtn" Click="nxtBtn_Click" Margin="150,0,0,0" FontSize="16" Content="Next" Height="40" Width="75" Background="#100e0e" Foreground="Red" BorderBrush="Red">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" To="45" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" To="80" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" To="40" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" To="75" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </WrapPanel>
    </StackPanel>
</Window>
